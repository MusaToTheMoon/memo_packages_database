{
  "fileName": "java.util.concurrent.Executors",
  "sourceType": "github",
  "url": "https://github.com/openjdk/jdk/blob/master/src/java.base/share/classes/java/util/concurrent/Executors.java",
  "sourceCodeFilePath": "java_source_code_files/java/util/concurrent/Executors.java",
  "isSuccess": true,
  "llmModelName": [
    "gemini-2.5-pro",
    "gemini-2.5-pro",
    "gemini-2.5-pro"
  ],
  "llmAnalysisTimestamp": [
    1751896921,
    1751902780,
    1751923107
  ],
  "runName": [
    "gemini-2.5-pro-pass-1",
    "gemini-2.5-pro-pass-2",
    "gemini-2.5-pro-pass-3"
  ],
  "llmResponseTimeSeconds": [
    425.494,
    153.109,
    148.183
  ],
  "llmAnalysis": [
    {
      "methodSignature": "ExecutorService newFixedThreadPool(int nThreads)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newWorkStealingPool(int parallelism)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newWorkStealingPool()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newFixedThreadPool(int nThreads, ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newSingleThreadExecutor()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newSingleThreadExecutor(ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newCachedThreadPool()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newCachedThreadPool(ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newThreadPerTaskExecutor(ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService newVirtualThreadPerTaskExecutor()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ScheduledExecutorService newSingleThreadScheduledExecutor()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ScheduledExecutorService newSingleThreadScheduledExecutor(ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ScheduledExecutorService newScheduledThreadPool(int corePoolSize)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ScheduledExecutorService newScheduledThreadPool(int corePoolSize, ThreadFactory threadFactory)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ExecutorService unconfigurableExecutorService(ExecutorService executor)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ScheduledExecutorService unconfigurableScheduledExecutorService(ScheduledExecutorService executor)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ThreadFactory defaultThreadFactory()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "ThreadFactory privilegedThreadFactory()",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "<T> Callable<T> callable(Runnable task, T result)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "Callable<Object> callable(Runnable task)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "Callable<Object> callable(PrivilegedAction<?> action)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "Callable<Object> callable(PrivilegedExceptionAction<?> action)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "<T> Callable<T> privilegedCallable(Callable<T> callable)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    },
    {
      "methodSignature": "<T> Callable<T> privilegedCallableUsingCurrentClassLoader(Callable<T> callable)",
      "className": "java.util.concurrent.Executors",
      "aggregatedPurityInfo": {
        "aggregatedIsPureLLM": false,
        "aggregatedIsPureStrict": false,
        "aggregatedIsPureWithReads": false
      }
    }
  ]
}